{
  "id": "user_order_summary",
  "description": "Generates a summary of a user's orders over a certain threshold",
  "inputSchema": {
    "type": "object",
    "properties": {
      "userId": { "type": "number" },
      "minOrderValue": { "type": "number", "default": 100 }
    },
    "required": ["userId"]
  },
  "outputSchema": {
    "type": "object",
    "properties": {
      "user": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" }
        }
      },
      "orders": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "number" },
            "total": { "type": "number" }
          }
        }
      },
      "totalSpent": { "type": "number" }
    }
  },
  "steps": [
    {
      "id": "getUser",
      "type": "query",
      "depends_on": [],
      "next": [],
      "params": {
        "table": "users",
        "select": ["id", "name", "email", "status"],
        "where": {
          "id": "$context.input.userId"
        }
      }
    },
    {
      "id": "getOrders",
      "type": "query",
      "depends_on": [],
      "next": [],
      "params": {
        "table": "orders",
        "select": ["id", "user_id", "total"],
        "where": {
          "user_id": "$context.input.userId"
        }
      }
    },
    {
      "id": "joinUserOrders",
      "type": "join",
      "depends_on": ["getUser", "getOrders"],
      "params": {
        "left": "$step.getUser",
        "right": "$step.getOrders",
        "on": { "id": "user_id" },
        "type": "inner"
      }
    },
    {
      "id": "filterHighValue",
      "type": "filter",
      "depends_on": ["joinUserOrders"],
      "params": {
        "input": "$step.joinUserOrders",
        "where": { "total": { "$gte": "$input.minOrderValue" } }
      }
    },
    {
      "id": "mapToSummary",
      "type": "map",
      "depends_on": ["filterHighValue"],
      "next": [],
      "params": {
        "function": "createOrderSummary"
      }
    },
    {
      "id": "saveLog",
      "type": "insert",
      "depends_on": ["mapToSummary"],
      "next": [],
      "input": "mapToSummary",
      "params": {
        "table": "user_order_logs",
        "map": {
          "user_id": "$input.userId",
          "payload": "$input"
        }
      }
    },
    {
      "id": "checkUserStatus",
      "type": "condition",
      "depends_on": ["getUser"],
      "next": [],
      "input": "getUser",
      "params": {
        "if": "$input.status == 'pending'",
        "then": "sendReminderEmail",
        "else": "logStatus"
      }
    },
    {
      "id": "sendReminderEmail",
      "type": "http",
      "depends_on": ["checkUserStatus"],
      "next": [],
      "input": "getUser",
      "params": {
        "method": "POST",
        "url": "https://api.example.com/send-email",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "email": "$input.email",
          "subject": "Complete your registration",
          "message": "Your account is still pending. Please complete your signup."
        }
      }
    },
    {
      "id": "logStatus",
      "type": "log",
      "depends_on": ["checkUserStatus"],
      "next": [],
      "input": "getUser",
      "params": {
        "message": "User does not require reminder",
        "include": true
      }
    },
    {
      "id": "finalResponse",
      "type": "map",
      "depends_on": ["getUser", "filterHighValue"],
      "next": [],
      "input": ["getUser", "filterHighValue"],
      "params": {
        "function": "combineUserAndOrders"
      }
    }
  ]
}
